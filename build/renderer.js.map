{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../app/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["const textarea = document.querySelector('#textarea');\r\nconst htmlView = document.querySelector('#html');\r\nconst newFileButton = document.querySelector('#new-file');\r\nconst openFileButton = document.querySelector('#open-file');\r\nconst saveFileButton = document.querySelector('#save-file');\r\nconst revertButton = document.querySelector('#revert');\r\nconst showFileButton = document.querySelector('#show-file');\r\n\r\ndeclare const api: any;\r\n\r\nlet filePath: string | null = null;\r\nlet originalContent = '';\r\nlet currentContent = '';\r\n\r\nconst renderMarkdownToHtml = (markdown: string) => {\r\n    const clean = api.sanitize(markdown);\r\n    (htmlView as Element).innerHTML = api.marked(clean);\r\n};\r\n\r\ntextarea?.addEventListener('keyup', (event) => {\r\n    currentContent = api.eolAuto((event.target as HTMLTextAreaElement).value);\r\n    renderMarkdownToHtml(currentContent);\r\n    updateUserInterface(originalContent !== currentContent);\r\n});\r\n\r\nopenFileButton?.addEventListener('click', () => {\r\n    api.send('get-file-from-user');\r\n});\r\n\r\nnewFileButton?.addEventListener('click', () => {\r\n    api.send('on-new-file');\r\n});\r\n\r\nsaveFileButton?.addEventListener('click', () => {\r\n    saveFile();\r\n});\r\n\r\nrevertButton?.addEventListener('click', () => {\r\n    (textarea as HTMLTextAreaElement).value = originalContent;\r\n    renderMarkdownToHtml(originalContent);\r\n    updateUserInterface(false);\r\n});\r\n\r\nconst saveFile = () => {\r\n    const filters = [\r\n        {name: 'Markdown filePaths', extensions: ['md', 'markdown']},\r\n        {name: 'All Files', extensions: ['*']}\r\n    ];\r\n    const data = {\r\n        filePath,\r\n        filters,\r\n        content: (textarea as HTMLTextAreaElement).value\r\n    }\r\n    api.send('save-file', data);\r\n};\r\n\r\nconst renderFile = (pathToFile: string, content: string) => {\r\n    filePath = pathToFile;\r\n    originalContent = content;\r\n\r\n    (textarea as HTMLTextAreaElement).value = content;\r\n    renderMarkdownToHtml(content);\r\n\r\n    updateUserInterface(false);\r\n};\r\n\r\nconst updateUserInterface = (isEdited: boolean) => {\r\n    let title = api.appName;\r\n    if (filePath) {\r\n        title = `${api.path.basename(filePath)} - ${title}`;\r\n    }\r\n    if (isEdited) {\r\n        title = `${title} (Edited)`;\r\n    }\r\n\r\n    const data = {title, isEdited};\r\n    api.send('update-ui', data);\r\n    (saveFileButton as HTMLButtonElement).disabled = !isEdited;\r\n    (revertButton as HTMLButtonElement).disabled = !isEdited;\r\n};\r\n\r\napi.receive('file-opened', (pathToFile: string, content: string) => {\r\n    renderFile(pathToFile, content);\r\n});\r\n\r\napi.receive('file-changed', (filePath: string, content: string) => {\r\n    renderFile(filePath, content);\r\n});\r\n\r\napi.receive('save-file', () => {\r\n    saveFile();\r\n});\r\n\r\napi.receive('compare-contents', (windowId: number, filePath: string, content: string) => {\r\n    const haveDifferentContents = api.eolAuto(content) !== currentContent;\r\n    if (haveDifferentContents) {\r\n        const data = {\r\n            windowId,\r\n            filePath,\r\n            content\r\n        }\r\n        api.send('have-different-contents', data);\r\n    }\r\n});\r\n"]}