{"version":3,"file":"preload.js","sourceRoot":"","sources":["../app/preload.ts"],"names":[],"mappings":";;;;;AAAA,uCAAyC;AACzC,oDAA4B;AAC5B,0DAAwC;AACxC,iCAA8B;AAC9B,gDAAwB;AACxB,uCAAuC;AACvC,8CAAsB;AAEtB,MAAM,cAAc,GAAG,IAAI,aAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AAC5C,MAAM,SAAS,GAAG,mBAAe,CAAE,cAAoC,CAAC,CAAC;AACzE,MAAM,OAAO,GAAG,yBAAyB,CAAC;AAE1C,wBAAa,CAAC,iBAAiB,CAC3B,KAAK,EACL;IACI,QAAQ,EAAE,SAAS,CAAC,QAAQ;IAC5B,OAAO,EAAE,aAAG,CAAC,IAAI;IACjB,MAAM,EAAN,gBAAM;IACN,IAAI,EAAE,CAAC,OAAe,EAAE,IAAS,EAAE,EAAE;QACjC,MAAM,aAAa,GAAG;YAClB,oBAAoB;YACpB,aAAa;YACb,WAAW;YACX,WAAW;YACX,yBAAyB;SAC5B,CAAC;QACF,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACjC,sBAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACnC;IACL,CAAC;IACD,OAAO,EAAE,CAAC,OAAe,EAAE,IAAS,EAAE,EAAE;QACpC,MAAM,aAAa,GAAG;YAClB,aAAa;YACb,cAAc;YACd,WAAW;YACX,kBAAkB;SACrB,CAAC;QACF,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACjC,mDAAmD;YACnD,sBAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SAC9D;IACL,CAAC;IACD,IAAI,EAAE;QACF,QAAQ,EAAE,cAAI,CAAC,QAAQ;KAC1B;IACD,OAAO;CACV,CACJ,CAAA","sourcesContent":["import { contextBridge } from 'electron';\r\nimport marked from 'marked';\r\nimport createDOMPurify from 'dompurify';\r\nimport { JSDOM } from 'jsdom';\r\nimport path from 'path';\r\nimport { ipcRenderer } from 'electron';\r\nimport eol from 'eol';\r\n\r\nconst windowEmulator = new JSDOM('').window;\r\nconst DOMPurify = createDOMPurify((windowEmulator as unknown as Window));\r\nconst appName = 'Geodan Knutsel MDEditor';\r\n\r\ncontextBridge.exposeInMainWorld(\r\n    'api',\r\n    {\r\n        sanitize: DOMPurify.sanitize,\r\n        eolAuto: eol.auto,\r\n        marked,\r\n        send: (channel: string, data: any) => {\r\n            const validChannels = [\r\n                'get-file-from-user',\r\n                'on-new-file',\r\n                'save-file',\r\n                'update-ui',\r\n                'have-different-contents'\r\n            ];\r\n            if (validChannels.includes(channel)) {\r\n                ipcRenderer.send(channel, data);\r\n            }\r\n        },\r\n        receive: (channel: string, func: any) => {\r\n            const validChannels = [\r\n                'file-opened',\r\n                'file-changed',\r\n                'save-file',\r\n                'compare-contents'\r\n            ];\r\n            if (validChannels.includes(channel)) {\r\n                // Deliberately strip event as it includes `sender`\r\n                ipcRenderer.on(channel, (event, ...args) => func(...args));\r\n            }\r\n        },\r\n        path: {\r\n            basename: path.basename\r\n        },\r\n        appName\r\n    }\r\n)\r\n"]}